[package]
name = "rust_qecp"
version = "0.1.0"
authors = ["Yue Wu <yue.wu@yale.edu>"]
description = "Quantum Error Correction Playground for BIM'20 course"
edition = "2018"

# profiling: https://github.com/flamegraph-rs/flamegraph
# enable the following debug configuration, and then run `cargo flamegraph -- ...` which is equivalent to `cargo run --release -- ...`
# e.g. `cargo flamegraph --root -- tool fault_tolerant_benchmark '[13]' --djs '[13]' '[13]' -m100000000 -e1 '[0.01]' -p1 --time_budget 3600 --rotated_planar_code`
[profile.release]
debug = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
# to enable a feature, use `--features xxx`
default = ["reordered_css_gates"]
noserver = []  # ignore parts with actix-web to speed up compilation
fpga_amenable = []  # use FPGA-amenable code block (not friendly to read, but to test the equivalency with existing code)
MWPM_reverse_order = []  # to verify the idea that even MWPM decoders could have different threshold depending on the order of nodes
MWPM_shuffle = []  # to verify the order of vertices for MWPM doesn't effect the result
python_interfaces = ["pyo3"]  # by default to avoid using python interface, which includes `fpga_generator.rs`,
reordered_css_gates = []  # by default to true, this is especially good for rotated CSS surface code arXiv:1404.3747v3

[dependencies]
rand = { version = "0.8.4", features = ["alloc"] }
num_cpus = "1.13.0"
bytes = "0.6.0"
serde = { version = "1.0.117", features = ["derive", "rc"] }
serde_json = "1.0.59"
clap = "2.33.3"
ndarray = "0.13.1"
actix-web = "3.3.0"
actix-cors = "0.5.3"
pyo3 = { version =  "0.13.2", features = ["auto-initialize"], optional = true }
libc = "0.2.81"
petgraph = "0.6.0"
pbr = "1.0.4"
rand_core = "0.6.1"
derivative = "2.2.0"
union-find = "0.3.2"
derive_more = "0.99.11"
lazy_static = "1.4.0"
either = "1.6.1"
rug = "1.13.0"
shlex = "1.1.0"
cfg-if = "1.0.0"

[build-dependencies]
cc = "1.0.66"

[package.metadata.docs.rs]
rustdoc-args = [ "--html-in-header", "katex-header.html" ]
# to run locally: `RUSTDOCFLAGS="--html-in-header katex-header.html" cargo doc --no-deps`
